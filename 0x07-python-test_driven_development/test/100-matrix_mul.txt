from 100-matrix_mul import matrix_mul
m_a = [
    [1, 2],
    [3, 4],
]
m_b = m_a
print(matrix_mul(m_a, m_b))
# Output: [[7, 10], [15, 22]]

m_a = [[1, 2]]
m_b = [
    [3, 4],
    [5, 6]
]
print(matrix_mul(m_a, m_b))
# Output: [[13, 16]]
m_a = [
    [1.2, 5.5, 6.2],
    [4.66, 12.3, -9.2]
]
m_b = [
    [5.0, 3.3],
    [-2.9, 4.4],
    [7.2, 4.4]
]
print(matrix_mul(m_a, m_b))
# Output: [[34.69, 55.44], [-78.61, 29.018]]
m_a = [
    [1, 2.2, 3.3, 4],
    [5, 6, 7, 8.8],
]
m_b = [
    [1.1, 2, 3.3],
    [4.0, 5.5, 6],
    [7, 8, 9],
    [10.01, 11, 12.3]
]
print(matrix_mul(m_a, m_b))
# Output: [[73.04, 84.5, 95.4], [166.59, 195.8, 223.74]]
print(matrix_mul())
# TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
m_a = [
    [1, 2],
    [3, 4],
]
m_b = [
    [1, 2],
    [2, 3],
    [4, 5]
]
print(matrix_mul(m_a, m_b))
# ValueError: m_a and m_b can't be multiplied
print(matrix_mul([], [[1, 2]]))
# ValueError: m_a can't be empty

print(matrix_mul([[1, 2]], [[]]))
# ValueError: m_b can't be empty
print(matrix_mul("not a list", [[1, 2]]))
# TypeError: m_a must be a list

print(matrix_mul([[1, 2]], "also not a list"))
# TypeError: m_b must be a list

print(matrix_mul("not a list", "also not a list"))
# TypeError: m_a must be a list

print(matrix_mul(None, None))
# TypeError: m_a must be a list
print(matrix_mul([1, 2], [[3, 4]]))
# TypeError: m_a must be a list of lists

print(matrix_mul([[1, 2]], [3, 4]))
# TypeError: m_b must be a list of lists

print(matrix_mul([1, 2], [3, 4]))
# TypeError: m_a must be a list of lists
print(matrix_mul([[1, "non-number"]], [[3, 4]]))
# TypeError: m_a should contain only integers or floats

print(matrix_mul([[1, 2]], [[{"a": 1}, 8.8]]))
# TypeError: m_b should contain only integers or floats

print(matrix_mul([[1, "non-number"]], [[{"a": 1}, 8.8]]))
# TypeError: m_a should contain only integers or floats
m_a = [
    [1, 2],
    [3, 4, 5]
]
m_b = [
    [1, 2],
    [3,
